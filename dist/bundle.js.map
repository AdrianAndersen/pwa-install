{"version":3,"sources":["webpack://@khmyznikov/pwa-install/./node_modules/lit-html/lib/dom.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-html/lib/template.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-html/lib/modify-template.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-html/lib/directive.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-html/lib/part.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-html/lib/template-instance.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-html/lib/template-result.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-html/lib/parts.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-html/lib/template-factory.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-html/lib/render.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-html/lib/default-template-processor.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-html/lit-html.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-html/lib/shady-render.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-element/lib/updating-element.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-element/lib/decorators.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-element/lib/css-tag.js","webpack://@khmyznikov/pwa-install/./node_modules/lit-element/lit-element.js","webpack://@khmyznikov/pwa-install/./src/types/pwa-install.types.ts","webpack://@khmyznikov/pwa-install/./src/utils.ts","webpack://@khmyznikov/pwa-install/./src/styles.scss","webpack://@khmyznikov/pwa-install/./node_modules/lit-html/directives/class-map.js","webpack://@khmyznikov/pwa-install/./src/template.ts","webpack://@khmyznikov/pwa-install/./src/template_apple.ts","webpack://@khmyznikov/pwa-install/./src/index.ts"],"names":["isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","marker","Math","random","String","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","forEach","countNodes","startIndex","directives","WeakMap","isDirective","o","noChange","nothing","TemplateInstance","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","value","getHTML","innerHTML","isPrimitive","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","v","text","t","setAttribute","_getValue","committer","directive","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","call","templateCache","templateCaches","get","stringsArray","keyString","Map","set","key","join","getTemplateElement","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","Object","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","finalized","UpdatingElement","HTMLElement","initialize","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","hasOwnProperty","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","prototype","descriptor","getPropertyDescriptor","defineProperty","oldValue","requestUpdateInternal","configurable","enumerable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_updateState","_updatePromise","Promise","res","_enableUpdatingResolver","_changedProperties","_saveInstanceProperties","constructor","_v","_instanceProperties","enableUpdating","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","getPropertyOptions","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_reflectingProperties","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","standardProperty","kind","assign","clazz","placement","initializer","property","protoOrDescriptor","proto","legacyProperty","ElementProto","Element","msMatchesSelector","webkitMatchesSelector","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","_styleSheet","replaceSync","renderNotImplemented","LitElement","userStyles","getStyles","addStyles","reduceRight","unshift","_styles","map","cssRules","reduce","css","rule","_getUniqueStyles","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","styleSheet","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","hasUpdated","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","appendInto","delete","Manifest","icons","src","short_name","description","_eventDispatcher","_element","message","CustomEvent","detail","dispatchEvent","Utils","includes","navigator","platform","userAgent","maxTouchPoints","matchMedia","matches","standalone","getInstalledRelatedApps","then","relatedApps","acc","idx","textFromCSSResult","ClassList","classes","changed","classList","cls","classString","previousClassesCache","classMap","f","classInfo","previousClasses","remove","args","d","icon","installAvailable","hideDialog","install","available","howToForApple","howToRequested","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","__metadata","metadata","PWAInstallElement","manifest","platforms","userChoiceResult","isDialogHidden","sessionStorage","getItem","isInstallAvailable","isAppleMobilePlatform","isUnderStandaloneMode","isRelatedAppsInstalled","_howToRequested","_install","deferredEvent","prompt","userChoice","choiceResult","outcome","eventUserChoiceResult","catch","error","eventInstalledFail","requestUpdate","_hideDialog","setItem","showDialog","async","_howToForApple","_init","_checkInstalled","preventDefault","eventInstallAvailable","eventInstalledSuccess","fetch","response","ok","json","_json","isStandalone","isAppleMobile","setTimeout","classOrDescriptor","define","legacyCustomElement","elements","standardCustomElement"],"mappings":"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","file":"bundle.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        if (cache) {\n            const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n            descriptor.get = function () {\n                if (this[key] === undefined) {\n                    (this[key] =\n                        this.renderRoot.querySelector(selector));\n                }\n                return this[key];\n            };\n        }\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype;\nconst legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(slotName = '', flatten = false, selector = '') {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const slotSelector = `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n                const slot = this.renderRoot.querySelector(slotSelector);\n                let nodes = slot && slot.assignedNodes({ flatten });\n                if (nodes && selector) {\n                    nodes = nodes.filter((node) => node.nodeType === Node.ELEMENT_NODE &&\n                        node.matches ?\n                        node.matches(selector) :\n                        legacyMatches.call(node, selector));\n                }\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","export class Manifest {\r\n    constructor() {\r\n        this.icons = [{ src: '' }];\r\n        this.short_name = 'PWA';\r\n        this.name = 'Progressive web application';\r\n        this.description = 'Progressive web application';\r\n    }\r\n}\r\n","const _eventDispatcher = (_element, name, message) => {\r\n    const event = new CustomEvent(name, {\r\n        detail: {\r\n            message\r\n        }\r\n    });\r\n    _element.dispatchEvent(event);\r\n};\r\nexport default class Utils {\r\n    static isAppleMobile() {\r\n        if ((['iPhone', 'iPad', 'iPod'].includes(navigator.platform) ||\r\n            (navigator.userAgent.match(/Mac/) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2))\r\n            && ('serviceWorker' in navigator))\r\n            return true;\r\n        return false;\r\n    }\r\n    static isStandalone() {\r\n        if (window.matchMedia('(display-mode: standalone)').matches || ('standalone' in navigator && navigator.standalone === true))\r\n            return true;\r\n        return false;\r\n    }\r\n    static async getInstalledRelatedApps() {\r\n        if ('getInstalledRelatedApps' in navigator)\r\n            await navigator.getInstalledRelatedApps().then((relatedApps) => {\r\n                return relatedApps;\r\n            });\r\n        return [];\r\n    }\r\n    static async isRelatedAppsInstalled() {\r\n        const _relatedApps = await this.getInstalledRelatedApps();\r\n        return _relatedApps.length ? true : false;\r\n    }\r\n    static eventInstalledSuccess(_element) {\r\n        _eventDispatcher(_element, 'pwa-install-success-event', 'Application installation successfully processed (Chromium/Android only)');\r\n    }\r\n    static eventInstalledFail(_element) {\r\n        _eventDispatcher(_element, 'pwa-install-fail-event', 'Application installation failed (Chromium/Android only)');\r\n    }\r\n    static eventUserChoiceResult(_element, message) {\r\n        _eventDispatcher(_element, 'pwa-user-choice-result-event', message);\r\n    }\r\n    static eventInstallAvailable(_element) {\r\n        _eventDispatcher(_element, 'pwa-install-available-event', 'Application installation is available');\r\n    }\r\n}\r\n","import {css} from 'lit-element'; export default css`#pwa-install .install-dialog{position:fixed;display:inline-block;opacity:0;visibility:hidden;z-index:5}#pwa-install .install-dialog.chrome{font-family:Roboto,\"Segoe UI\";max-width:380px;width:90%;min-height:90px;margin:0 auto;right:0;left:0;background-color:#fff;box-shadow:0 5px 15px rgba(0,0,0,.3);font-size:15px;color:#333;border-radius:3px;top:-100px;transition:top .5s ease-in-out 1s,opacity 1.3s ease-in-out .8s}#pwa-install .install-dialog.chrome .dialog-body{display:grid;grid-template-columns:70px 1fr}#pwa-install .install-dialog.chrome .dialog-body .icon{display:flex;align-items:flex-start}#pwa-install .install-dialog.chrome .dialog-body .icon .icon-image{width:48px;height:48px;margin:0 auto;margin-top:10px;border-radius:3px}#pwa-install .install-dialog.chrome .dialog-body .about{display:grid;grid-template-rows:32px auto}#pwa-install .install-dialog.chrome .dialog-body .about .description,#pwa-install .install-dialog.chrome .dialog-body .about .name{padding:5px 15px;padding-left:5px;overflow:hidden}#pwa-install .install-dialog.chrome .dialog-body .about .name{font-weight:500;padding-top:10px;font-size:18px}#pwa-install .install-dialog.chrome .dialog-body .about .description{font-size:14px;font-weight:400;opacity:.7;line-height:20px;padding-bottom:0;margin-bottom:10px}#pwa-install .install-dialog.chrome .dialog-body .action-buttons{display:grid;grid-template-columns:50% auto;grid-column-start:1;grid-column-end:3;gap:15px;padding:10px 15px}#pwa-install .install-dialog.chrome.available{opacity:1;top:15px;visibility:visible}#pwa-install .install-dialog.apple{font-family:system-ui,-apple-system,HelveticaNeue,BlinkMacSystemFont;display:inline-grid;grid-template-rows:1fr auto;grid-gap:15px;max-width:380px;width:auto;margin:0 auto;padding:15px;right:0;left:0;font-size:15px;color:#333;bottom:-100px;transition:bottom .5s ease-in-out 1s,opacity 1.3s ease-in-out .8s,max-height .35s ease-in-out;overflow:hidden;will-change:opacity,visibility,bottom,top}#pwa-install .install-dialog.apple .dialog-body{display:grid;grid-template-columns:95px auto 1fr;grid-template-rows:1fr auto;grid-template-areas:\"icon description\" \"how-to how-to\" \"button button\";border-radius:15px;border-bottom:1px solid transparent;transition:border .35s ease-in-out;background-color:rgba(251,251,251,.8);box-shadow:0 5px 15px rgba(0,0,0,.2)}#pwa-install .install-dialog.apple .dialog-body .icon{display:flex;align-items:center;grid-area:icon;border-bottom:1px solid rgba(0,0,0,.1)}#pwa-install .install-dialog.apple .dialog-body .icon .icon-image{width:64px;height:64px;margin:0 auto;border-radius:6px}#pwa-install .install-dialog.apple .dialog-body .about{display:grid;grid-template-rows:35px 60px;border-bottom:1px solid rgba(0,0,0,.1);grid-area:description}#pwa-install .install-dialog.apple .dialog-body .about .description,#pwa-install .install-dialog.apple .dialog-body .about .name{padding-right:12px;overflow:hidden}#pwa-install .install-dialog.apple .dialog-body .about .name{font-weight:600;padding-top:15px;line-height:15px}#pwa-install .install-dialog.apple .dialog-body .about .description{font-size:12px;line-height:15px;margin-bottom:15px;overflow-y:auto}#pwa-install .install-dialog.apple .dialog-button{display:grid;height:50px;line-height:50px;border-radius:8px}#pwa-install .install-dialog.apple .dialog-button.button{border:none;outline:0;font-family:system-ui,-apple-system,HelveticaNeue,BlinkMacSystemFont;cursor:pointer;user-select:none;font-weight:400;font-size:17px;padding:0;margin:0}#pwa-install .install-dialog.apple .dialog-button.button.install{margin:15px;background-color:#fff;grid-area:button}#pwa-install .install-dialog.apple .dialog-button.button.cancel{margin:0 15px;opacity:.5;background-color:rgba(251,251,251,.9);box-shadow:0 5px 15px rgba(0,0,0,.3)}#pwa-install .install-dialog.apple .dialog-button.button:active{background-color:#f1f1f1}#pwa-install .install-dialog.apple .how-to-body{opacity:0;max-height:0;overflow:hidden;transition:opacity ease-in-out .5s,max-height .5s ease-in-out;grid-area:how-to}#pwa-install .install-dialog.apple .how-to-body .how-to-description{display:grid;user-select:none;grid-template-columns:1fr 1fr;grid-template-rows:auto 1fr;gap:10px;grid-template-areas:\"title title\" \". .\";padding:15px;padding-bottom:0}#pwa-install .install-dialog.apple .how-to-body .how-to-description .description-title{font-size:16px;grid-area:title;text-align:center;font-weight:400;padding-bottom:5px;width:85%;margin:0 auto}#pwa-install .install-dialog.apple .how-to-body .how-to-description .description-step{display:inline-flex;flex-direction:column;align-items:center;font-size:14px}#pwa-install .install-dialog.apple .how-to-body .how-to-description .description-step .svg-wrap{display:inline-flex;background-color:#fff;width:48px;height:48px;align-items:center;border-radius:6px}#pwa-install .install-dialog.apple .how-to-body .how-to-description .description-step .svg-wrap #pwa-add,#pwa-install .install-dialog.apple .how-to-body .how-to-description .description-step .svg-wrap #pwa-share{margin:0 auto}#pwa-install .install-dialog.apple .how-to-body .how-to-description .description-step .svg-wrap #pwa-share{margin-bottom:4px;transform:scale(.8)}#pwa-install .install-dialog.apple .how-to-body .how-to-description .description-step .svg-wrap #pwa-add{transform:scale(.9)}#pwa-install .install-dialog.apple .how-to-body .how-to-description .description-step .step-text{margin-top:5px;text-align:center}#pwa-install .install-dialog.apple.available{opacity:1;bottom:20px;visibility:visible}#pwa-install .install-dialog.apple.how-to .dialog-body{border-bottom:1px solid #e0e0e0}#pwa-install .install-dialog.apple.how-to .how-to-body{opacity:1;max-height:400px;transition:opacity .3s ease-in-out .2s,max-height .5s ease-in-out}#pwa-install .material-button{position:relative;display:inline-block;box-sizing:border-box;border:none;border-radius:4px;padding:0 16px;min-width:64px;height:36px;vertical-align:middle;text-align:center;text-overflow:ellipsis;text-transform:uppercase;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);font-family:Roboto,\"Segoe UI\",BlinkMacSystemFont,system-ui,-apple-system;font-size:14px;font-weight:500;line-height:37px;overflow:hidden;outline:0;cursor:pointer;transition:box-shadow .2s}#pwa-install .material-button.primary{color:#fff;background-color:#4285f4}#pwa-install .material-button.secondary{background-color:#fff;color:#4285f4;box-shadow:none}#pwa-install .material-button.secondary::after,#pwa-install .material-button.secondary::before{background-color:#4285f4}#pwa-install .material-button.secondary:active,#pwa-install .material-button.secondary:hover{box-shadow:none}#pwa-install .material-button::before{content:\"\";position:absolute;top:0;bottom:0;left:0;right:0;background-color:#fff;opacity:0;transition:opacity .2s}#pwa-install .material-button::after{content:\"\";position:absolute;left:50%;top:50%;border-radius:50%;padding:50%;width:32px;height:32px;background-color:#fff;opacity:0;transform:translate(-50%,-50%) scale(1);transition:opacity 1s,transform .5s}#pwa-install .material-button:hover{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}#pwa-install .material-button:hover::before{opacity:.08}#pwa-install .material-button:hover:focus::before{opacity:.3}#pwa-install .material-button:active{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}#pwa-install .material-button:active::after{opacity:.32;transform:translate(-50%,-50%) scale(0);transition:transform 0s}@media(min-width:768px){#pwa-install .install-dialog.apple{top:-100px;bottom:unset;transition:top .5s ease-in-out 1s,opacity 1.3s ease-in-out .8s,max-height .35s ease-in-out}#pwa-install .install-dialog.apple.available{top:28px;bottom:auto}}@media(max-width:767px){#pwa-install .install-dialog.apple .description-step .step-text{font-size:13px}}`;\n    ","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n// IE11 doesn't support classList on SVG elements, so we emulate it with a Set\nclass ClassList {\n    constructor(element) {\n        this.classes = new Set();\n        this.changed = false;\n        this.element = element;\n        const classList = (element.getAttribute('class') || '').split(/\\s+/);\n        for (const cls of classList) {\n            this.classes.add(cls);\n        }\n    }\n    add(cls) {\n        this.classes.add(cls);\n        this.changed = true;\n    }\n    remove(cls) {\n        this.classes.delete(cls);\n        this.changed = true;\n    }\n    commit() {\n        if (this.changed) {\n            let classString = '';\n            this.classes.forEach((cls) => classString += cls + ' ');\n            this.element.setAttribute('class', classString);\n        }\n    }\n}\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst previousClassesCache = new WeakMap();\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `class` if the property value is truthy; if the property value is\n * falsey, the property name is removed from the element's `class`. For example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'class' || part.committer.parts.length > 1) {\n        throw new Error('The `classMap` directive must be used in the `class` attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { element } = committer;\n    let previousClasses = previousClassesCache.get(part);\n    if (previousClasses === undefined) {\n        // Write static classes once\n        // Use setAttribute() because className isn't a string on SVG elements\n        element.setAttribute('class', committer.strings.join(' '));\n        previousClassesCache.set(part, previousClasses = new Set());\n    }\n    const classList = (element.classList || new ClassList(element));\n    // Remove old classes that no longer apply\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    previousClasses.forEach((name) => {\n        if (!(name in classInfo)) {\n            classList.remove(name);\n            previousClasses.delete(name);\n        }\n    });\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n        const value = classInfo[name];\n        if (value != previousClasses.has(name)) {\n            // We explicitly want a loose truthy check of `value` because it seems\n            // more convenient that '' and 0 are skipped.\n            if (value) {\n                classList.add(name);\n                previousClasses.add(name);\n            }\n            else {\n                classList.remove(name);\n                previousClasses.delete(name);\n            }\n        }\n    }\n    if (typeof classList.commit === 'function') {\n        classList.commit();\n    }\n});\n//# sourceMappingURL=class-map.js.map","import { html } from 'lit-element';\r\nimport { classMap } from 'lit-html/directives/class-map.js';\r\nconst template = (name, description, icon, installAvailable, hideDialog, install) => {\r\n    const installDialogClasses = () => { return { available: installAvailable }; };\r\n    return html `\r\n        <div id=\"pwa-install\">\r\n            <div class=\"install-dialog chrome ${classMap(installDialogClasses())}\">\r\n                <div class=\"dialog-body\">\r\n                    <div class=\"icon\">\r\n                        <img src=\"${icon}\" alt=\"icon\" class=\"icon-image\">\r\n                    </div>\r\n                    <div class=\"about\">\r\n                        <div class=\"name\">${name}</div>\r\n                        <div class=\"description\">${description}</div>\r\n                    </div>\r\n                    <div class=\"action-buttons\">\r\n                        <button class=\"material-button secondary cancel\" @click='${hideDialog}'>Hide</button>\r\n                        <button class=\"material-button primary install\" @click='${install}'>Install</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>`;\r\n};\r\nexport default template;\r\n","import { html } from 'lit-element';\r\nimport { classMap } from 'lit-html/directives/class-map.js';\r\nconst template = (name, description, icon, installAvailable, hideDialog, howToForApple, howToRequested) => {\r\n    const installDialogClassesApple = () => { return { available: installAvailable, 'how-to': howToRequested }; };\r\n    return html `\r\n        <div id=\"pwa-install\">\r\n            <div class=\"install-dialog apple ${classMap(installDialogClassesApple())}\">\r\n                <div class=\"dialog-body\">\r\n                    <div class=\"icon\">\r\n                        <img src=\"${icon}\" alt=\"icon\" class=\"icon-image\">\r\n                    </div>\r\n                    <div class=\"about\">\r\n                        <div class=\"name\">${name}</div>\r\n                        <div class=\"description\">${description}</div>\r\n                    </div>\r\n                    <div class=\"how-to-body\">\r\n                        <div class=\"how-to-description\">\r\n                            <div class=\"description-title\">\r\n                                Add this Web App to your Home Screen for quick and easy access.\r\n                            </div>\r\n                            <div class=\"description-step\">\r\n                                <div class=\"svg-wrap\">\r\n                                    <svg id=\"pwa-share\" width=\"25\" height=\"32\">\r\n                                        <g>\r\n                                            <path fill=\"rgb(0,122,255)\"\r\n                                                d=\"m12.51122,20.7648c0.52277,0 0.99149,-0.43265 0.99149,-0.95542l0,-14.87204l-0.09015,-2.0731l1.11768,1.15371l2.27135,2.37952c0.18028,0.19833 0.43265,0.30647 0.68502,0.30647c0.50476,0 0.90134,-0.37857 0.90134,-0.88332c0,-0.27039 -0.10817,-0.46869 -0.28844,-0.64895l-4.86721,-4.74103c-0.25237,-0.25237 -0.46869,-0.32448 -0.72106,-0.32448c-0.25237,0 -0.46869,0.0721 -0.72106,0.32448l-4.88523,4.74103c-0.18028,0.18028 -0.28844,0.37857 -0.28844,0.64895c0,0.50476 0.37857,0.88332 0.90134,0.88332c0.23436,0 0.50476,-0.10814 0.68502,-0.30647l2.27135,-2.37952l1.11768,-1.17172l-0.0721,2.09112l0,14.87204c0,0.52277 0.45066,0.95542 0.99145,0.95542l-0.00002,0l-0.00001,-0.00001zm-8.13005,10.96022l16.22403,0c2.86626,0 4.30841,-1.42412 4.30841,-4.23627l0,-14.27715c0,-2.79415 -1.44215,-4.23627 -4.30841,-4.23627l-3.96589,0l0,2.00095l3.92985,0c1.47819,0 2.34345,0.79316 2.34345,2.34345l0,14.06085c0,1.5503 -0.86527,2.34347 -2.34345,2.34347l-16.15194,0c-1.49625,0 -2.32547,-0.79317 -2.32547,-2.34347l0,-14.06085c0,-1.55029 0.82923,-2.34345 2.32547,-2.34345l3.96589,0l0,-2.00095l-4.00196,0c-2.84821,0 -4.29035,1.4241 -4.29035,4.23627l0,14.27715c0,2.81217 1.44215,4.23627 4.29035,4.23627l0.00001,0l0.00001,0z\" />\r\n                                        </g>\r\n                                    </svg>\r\n                                </div>\r\n                                <div class=\"step-text\">1. Tap on Share in browser Navigation bar</div>\r\n                            </div>\r\n                            <div class=\"description-step\">\r\n                                <div class=\"svg-wrap\">\r\n                                    <svg id=\"pwa-add\" width=\"26\" height=\"26\">\r\n                                        <g>\r\n                                            <path fill=\"#686871\"\r\n                                                d=\"m23.40492,1.60784c-1.32504,-1.32504 -3.19052,-1.56912 -5.59644,-1.56912l-10.65243,0c-2.33622,0 -4.2017,0.24408 -5.5267,1.56912c-1.32504,1.34243 -1.56911,3.17306 -1.56911,5.50924l0,10.5827c0,2.40596 0.22665,4.254 1.55165,5.57902c1.34246,1.32501 3.19052,1.5691 5.59647,1.5691l10.60013,0c2.40592,0 4.2714,-0.24408 5.59644,-1.5691c1.325,-1.34245 1.55166,-3.17306 1.55166,-5.57902l0,-10.51293c0,-2.40596 -0.22666,-4.25401 -1.55166,-5.57901zm-0.38355,5.21289l0,11.24518c0,1.51681 -0.20924,2.94643 -1.02865,3.78327c-0.83683,0.83685 -2.30134,1.0635 -3.81815,1.0635l-11.33234,0c-1.51681,0 -2.96386,-0.22665 -3.80073,-1.0635c-0.83683,-0.83684 -1.04607,-2.26646 -1.04607,-3.78327l0,-11.19288c0,-1.5517 0.20924,-3.01617 1.02865,-3.85304c0.83687,-0.83683 2.31876,-1.04607 3.87042,-1.04607l11.28007,0c1.51681,0 2.98132,0.22666 3.81815,1.06353c0.81941,0.81941 1.02865,2.26645 1.02865,3.78327zm-10.53039,12.08205c0.64506,0 1.02861,-0.43586 1.02861,-1.13326l0,-4.34117l4.53294,0c0.66252,0 1.13326,-0.36613 1.13326,-0.99376c0,-0.64506 -0.43586,-1.02861 -1.13326,-1.02861l-4.53294,0l0,-4.53294c0,-0.6974 -0.38355,-1.13326 -1.02861,-1.13326c-0.62763,0 -0.99376,0.45332 -0.99376,1.13326l0,4.53294l-4.51552,0c-0.69737,0 -1.15069,0.38355 -1.15069,1.02861c0,0.62763 0.48817,0.99376 1.15069,0.99376l4.51552,0l0,4.34117c0,0.66252 0.36613,1.13326 0.99376,1.13326z\" />\r\n                                        </g>\r\n                                    </svg>\r\n                                </div>\r\n                                <div class=\"step-text\">2. Add to Home Screen in Share menu</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <button class=\"dialog-button button install\" @click=${howToForApple}>Install</button>\r\n                </div>\r\n                <button class=\"dialog-button button cancel\" @click='${hideDialog}'>Hide</button>\r\n            </div>\r\n        </div>`;\r\n};\r\nexport default template;\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { customElement, LitElement, html, property } from 'lit-element';\r\nimport { Manifest } from './types/pwa-install.types';\r\nimport Utils from './utils';\r\nimport styles from './styles.scss';\r\nimport template from './template';\r\nimport templateApple from './template_apple';\r\nlet PWAInstallElement = class PWAInstallElement extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.manifest = new Manifest();\r\n        this['manifest-url'] = '/manifest.json';\r\n        this.icon = '';\r\n        this.name = '';\r\n        this.description = '';\r\n        this.platforms = '';\r\n        this.userChoiceResult = '';\r\n        this.isDialogHidden = JSON.parse(window.sessionStorage.getItem('pwa-hide-install') || 'false');\r\n        this.isInstallAvailable = false;\r\n        this.isAppleMobilePlatform = false;\r\n        this.isUnderStandaloneMode = false;\r\n        this.isRelatedAppsInstalled = false;\r\n        this._howToRequested = false;\r\n        this._install = {\r\n            handleEvent: () => {\r\n                if (window.deferredEvent) {\r\n                    window.deferredEvent.prompt();\r\n                    window.deferredEvent.userChoice\r\n                        .then((choiceResult) => {\r\n                        this.userChoiceResult = choiceResult.outcome;\r\n                        Utils.eventUserChoiceResult(this, this.userChoiceResult);\r\n                    })\r\n                        .catch((error) => {\r\n                        Utils.eventInstalledFail(this);\r\n                    });\r\n                    window.deferredEvent = null;\r\n                }\r\n            },\r\n            passive: true\r\n        };\r\n        this.install = () => {\r\n            if (this.isAppleMobilePlatform) {\r\n                this._howToRequested = true;\r\n                this.requestUpdate();\r\n            }\r\n            else\r\n                this._install.handleEvent();\r\n        };\r\n        this._hideDialog = {\r\n            handleEvent: () => {\r\n                this.isDialogHidden = true;\r\n                window.sessionStorage.setItem('pwa-hide-install', 'true');\r\n                this.requestUpdate();\r\n            },\r\n            passive: true\r\n        };\r\n        this.hideDialog = () => {\r\n            this._hideDialog.handleEvent();\r\n        };\r\n        this.showDialog = () => {\r\n            this.isDialogHidden = false;\r\n            this.isInstallAvailable = true;\r\n            this.requestUpdate();\r\n        };\r\n        this.getInstalledRelatedApps = async () => {\r\n            return await Utils.getInstalledRelatedApps();\r\n        };\r\n        this._howToForApple = {\r\n            handleEvent: () => {\r\n                this._howToRequested = !this._howToRequested;\r\n                this.requestUpdate();\r\n            },\r\n            passive: true\r\n        };\r\n        this._init = () => {\r\n            window.deferredEvent = null;\r\n            this._checkInstalled();\r\n            window.addEventListener('beforeinstallprompt', (e) => {\r\n                window.deferredEvent = e;\r\n                e.preventDefault();\r\n                this.platforms = e.platforms;\r\n                if (this.isRelatedAppsInstalled || this.isUnderStandaloneMode) {\r\n                    this.isInstallAvailable = false;\r\n                }\r\n                else {\r\n                    this.isInstallAvailable = true;\r\n                    Utils.eventInstallAvailable(this);\r\n                }\r\n                if (this.userChoiceResult === 'accepted') {\r\n                    this.isDialogHidden = true;\r\n                    Utils.eventInstalledSuccess(this);\r\n                }\r\n                this.requestUpdate();\r\n            });\r\n            window.addEventListener('appinstalled', (e) => {\r\n                window.deferredEvent = null;\r\n                this.isInstallAvailable = false;\r\n                this.requestUpdate();\r\n                Utils.eventInstalledSuccess(this);\r\n            });\r\n            fetch(this['manifest-url']).then((response) => {\r\n                if (response.ok)\r\n                    response.json().then((_json) => {\r\n                        this.icon = this.icon || _json.icons[0].src;\r\n                        this.name = this.name || _json['short_name'] || _json.name;\r\n                        this.description = this.description || _json.description;\r\n                        this.manifest = _json;\r\n                    });\r\n                else {\r\n                    this.icon = this.icon || this.manifest.icons[0].src;\r\n                    this.name = this.name || this.manifest['short_name'];\r\n                    this.description = this.description || this.manifest.description;\r\n                }\r\n            });\r\n        };\r\n    }\r\n    static get styles() {\r\n        return styles;\r\n    }\r\n    async _checkInstalled() {\r\n        this.isUnderStandaloneMode = Utils.isStandalone();\r\n        this.isRelatedAppsInstalled = await Utils.isRelatedAppsInstalled();\r\n        this.isAppleMobilePlatform = Utils.isAppleMobile();\r\n        if (this.isAppleMobilePlatform) {\r\n            if (!this.isUnderStandaloneMode)\r\n                setTimeout(() => {\r\n                    this.isInstallAvailable = true;\r\n                    this.requestUpdate();\r\n                    Utils.eventInstallAvailable(this);\r\n                }, 300);\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        this._init();\r\n        super.connectedCallback();\r\n    }\r\n    render() {\r\n        if (this.isAppleMobilePlatform)\r\n            return html `${templateApple(this.name, this.description, this.icon, this.isInstallAvailable && !this.isDialogHidden, this._hideDialog, this._howToForApple, this._howToRequested)}`;\r\n        else\r\n            return html `${template(this.name, this.description, this.icon, this.isInstallAvailable && !this.isDialogHidden, this._hideDialog, this._install)}`;\r\n    }\r\n};\r\n__decorate([\r\n    property(),\r\n    __metadata(\"design:type\", Object)\r\n], PWAInstallElement.prototype, \"manifest-url\", void 0);\r\n__decorate([\r\n    property(),\r\n    __metadata(\"design:type\", Object)\r\n], PWAInstallElement.prototype, \"icon\", void 0);\r\n__decorate([\r\n    property(),\r\n    __metadata(\"design:type\", Object)\r\n], PWAInstallElement.prototype, \"name\", void 0);\r\n__decorate([\r\n    property(),\r\n    __metadata(\"design:type\", Object)\r\n], PWAInstallElement.prototype, \"description\", void 0);\r\nPWAInstallElement = __decorate([\r\n    customElement('pwa-install')\r\n], PWAInstallElement);\r\nexport { PWAInstallElement };\r\n"],"sourceRoot":""}